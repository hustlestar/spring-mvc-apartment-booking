CREATE TABLE APARTMENTS
(
    A_ID NUMBER(*) PRIMARY KEY NOT NULL,
    A_TITLE VARCHAR2(100) NOT NULL,
    A_ADDRESS VARCHAR2(300) NOT NULL,
    A_CO_ID NUMBER(*) NOT NULL,
    A_CI_ID NUMBER(*) NOT NULL,
    A_GUESTS NUMBER(*) NOT NULL
);
CREATE TABLE CITIES
(
    CI_ID NUMBER(*) PRIMARY KEY NOT NULL,
    CI_TITLE VARCHAR2(30) NOT NULL,
    CI_CO_ID NUMBER(*) NOT NULL
);
CREATE TABLE COUNTRIES
(
    CO_ID NUMBER(*) PRIMARY KEY NOT NULL,
    CO_TITLE VARCHAR2(30) NOT NULL
);
CREATE TABLE USERS
(
    U_ID NUMBER(*) PRIMARY KEY NOT NULL,
    U_LOGIN VARCHAR2(20) NOT NULL,
    U_EMAIL VARCHAR2(30) NOT NULL,
    U_PASSWORD VARCHAR2(32) NOT NULL,
    U_FIRST_NAME VARCHAR2(20),
    U_LAST_NAME VARCHAR2(20)
);
ALTER TABLE APARTMENTS ADD FOREIGN KEY (A_CO_ID) REFERENCES COUNTRIES (CO_ID) ON DELETE CASCADE;
ALTER TABLE APARTMENTS ADD FOREIGN KEY (A_CI_ID) REFERENCES CITIES (CI_ID);
CREATE UNIQUE INDEX APARTMENTS_ADDRESS_UINDEX ON APARTMENTS (A_ADDRESS, A_CO_ID, A_CI_ID);
ALTER TABLE CITIES ADD FOREIGN KEY (CI_CO_ID) REFERENCES COUNTRIES (CO_ID) ON DELETE CASCADE;
CREATE UNIQUE INDEX "COUNTRIES_co_title_uindex" ON COUNTRIES (CO_TITLE);
CREATE UNIQUE INDEX USERS_U_LOGIN_UINDEX ON USERS (U_LOGIN);
CREATE UNIQUE INDEX USERS_U_EMAIL_UINDEX ON USERS (U_EMAIL);
CREATE SEQUENCE  A_ID_SEQ  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  CI_ID_SEQ  MINVALUE 1 MAXVALUE 9999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  CO_ID_SEQ  MINVALUE 1 MAXVALUE 500 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOPARTITION ;
CREATE SEQUENCE  U_ID_SEQ  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOPARTITION ;
create or replace
TRIGGER apartments_on_insert
  BEFORE INSERT ON APARTMENTS
  FOR EACH ROW
BEGIN
  SELECT A_ID_SEQ.nextval
  INTO :new.A_ID
  FROM dual;
END;
/
create or replace
TRIGGER cities_on_insert
  BEFORE INSERT ON CITIES
  FOR EACH ROW
BEGIN
  SELECT CI_ID_SEQ.nextval
  INTO :new.CI_ID
  FROM dual;
END;
/
create or replace
TRIGGER countries_on_insert
  BEFORE INSERT ON COUNTRIES
  FOR EACH ROW
BEGIN
  SELECT CO_ID_SEQ.nextval
  INTO :new.CO_ID
  FROM dual;
END;
/
create or replace
TRIGGER users_on_insert
  BEFORE INSERT ON USERS
  FOR EACH ROW
BEGIN
  SELECT U_ID_SEQ.nextval
  INTO :new.U_ID
  FROM dual;
END;
